local spawn_memblock

local TSIZE = 32
local BLOCK_TYPES = {
	"1x1_a",
	"2x2_a",
	"2x2_b"
}

local MIN_BLOCK_COLOR = 3
local MAX_BLOCK_COLOR = 6

function init(self)
	local cursor_image = resource.load("/assets/resources/cursor.png")
	defos.set_cursor({ image = cursor_image, hot_spot_x = 10, hot_spot_y = 10 })
	
	msg.post(".", "acquire_input_focus")
	self.mouse_x = 0
	self.mouse_y = 0

	self.active_block = spawn_memblock(self.mouse_x, self.mouse_y)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("was_memblock_placed") then
		if message.result then 
			go.delete(self.active_block)
			self.active_block = spawn_memblock(self.mouse_x, self.mouse_y, "block_2x2_a")
		end
	end
end

function on_input(self, action_id, action)
	if action_id == nil then --mouse move
		self.mouse_x = action.screen_x
		self.mouse_y = action.screen_y
		local new_position = vmath.vector3(self.mouse_x, self.mouse_y, 0.5)
		msg.post(self.active_block, "target_position", { position = new_position })
	elseif action_id == hash("touch") and action.pressed then -- mouse click
		msg.post(self.active_block, "place_into_map")
	end
end

-- ----------------------------------------------------------

function spawn_memblock(x, y)
	local color = math.random(MIN_BLOCK_COLOR, MAX_BLOCK_COLOR)
	local template = BLOCK_TYPES[math.random(#BLOCK_TYPES)]

	local memblock = factory.create("membank#factory", vmath.vector3(x, y, 0.5), nil,
		{ template = hash(template), map = msg.url("membank#map"), color = color })
	return memblock
end